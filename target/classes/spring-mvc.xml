<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       https://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/mvc
       https://www.springframework.org/schema/mvc/spring-mvc.xsd">

    <!--1.注解驱动-->
    <mvc:annotation-driven/>
    <!-- 2.让Spring MVC不处理静态资源,比如 .html，.css，.js，.MP3，.mp4等 -->
    <mvc:default-servlet-handler/>
<!--    首先由于web.xml配置了DispatcherServlet，其匹配路径都是“/”，既可以理解成所有的路径都要经过DispatcherServlet，
    那么对于那些css , js ,图片等静态资源怎么办呢？这个时候<mvc:resources mapping="/static/**" location="/static/"/>
    这句话开始起作用，起含义是对于/static/**这种请求，不会被DispatcherServlet拦截，浏览器可以直接访问，当做静态资源交给Servlet处理。-->

<!--    <mvc:resources mapping="/static/**" location="/static/"/>-->
    <!--3.扫描包：controller，使得controller下的所有类注解生效-->
    <context:component-scan base-package="com.ecut.controller"/>



    <!--4.视图解析器-->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/"/>
        <property name="suffix" value=".jsp"/>
    </bean>
    <mvc:interceptors>
        <mvc:interceptor>
            <mvc:mapping path="/admin/**"/>
            <bean class="com.ecut.interceptor.AdminInterceptor"/>
        </mvc:interceptor>
        <mvc:interceptor>
            <mvc:mapping path="/client/t/**"/>
            <bean class="com.ecut.interceptor.ClientTeacherInterceptor"/>
        </mvc:interceptor>
        <mvc:interceptor>
            <mvc:mapping path="/client/s/**"/>
            <bean class="com.ecut.interceptor.ClientStudentInterceptor"/>
        </mvc:interceptor>
    </mvc:interceptors>
</beans>